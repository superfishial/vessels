apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-ui
  labels:
    app: chat-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-ui
  template:
    metadata:
      labels:
        app: chat-ui
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - name: chat-ui
          image: docker.super.fish/huggingface/chat-ui:latest
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: env
              mountPath: /app/.env.local
              subPath: .env.local
      volumes:
        - name: env
          secret:
            secretName: chat-ui

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-ui
data:

---
apiVersion: v1
kind: Service
metadata:
  name: chat-ui
spec:
  type: ClusterIP
  selector:
    app: chat-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat-ui
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  rules:
    - host: chat.super.fish
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-ui
                port:
                  number: 80
  tls:
    - hosts:
        - chat.super.fish
      secretName: chat.super.fish

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: chat-ui
spec:
  podSelector:
    matchLabels:
      app: chat-ui
  ingress:
    - {}
